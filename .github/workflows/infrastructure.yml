name: Infrastructure CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: darpo-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Format
        run: terraform fmt -check -recursive
        
      - name: Terraform Validate
        run: |
          cd terraform/environments/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          terraform init -backend=false
          terraform validate

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform/environments/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          terraform init
          
      - name: Terraform Plan
        run: |
          cd terraform/environments/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          terraform plan -out=tfplan
          
      - name: Terraform Apply
        run: |
          cd terraform/environments/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          terraform apply -auto-approve tfplan

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy Kubernetes Resources
        run: |
          kubectl apply -k kubernetes/overlays/${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
